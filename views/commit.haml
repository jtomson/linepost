!!! strict
%html(lang="en")
    %head
        %title = "commit #{sha} in #{repo}"
        
        %link{rel: "stylesheet", type: "text/css", href: "/commit.css"}
        %link{rel: "stylesheet", type: "text/css", href: "/diff.css"}
        %link{rel: "stylesheet", type: "text/css", href: "/comment.css"}
        
        %script{type: "text/javascript", src: "http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"}
        %script{type: "text/javascript", src: "/jquery.timeago.js"}
        %script{type: "text/javascript", src: "/diffHighlighter.js"}
        %script{type: "text/javascript", src: "/showdown.js"}
        
        :javascript
            var _slide_speed = 300;
            function onCommentSubmitClicked() {
                var add_comment_form = $(this).closest('.add-comment-form');
                var comment_text = $('textarea[name="comment_text"]', add_comment_form).val();
                if (comment_text.length === 0) {
                    // flash red or something? maybe better to disable this button
                    // until there's text
                    return false;
                }
                
                var comments_row = $(this).closest('.comments-row');
                var comment = {
                    'file_idx': comments_row.attr('file_idx'),
                    'row_idx': comments_row.attr('row_idx'),
                    'comment_text': comment_text,
                    'id': -1
                };
                
                $.post('/#{repo}/#{sha}/comments', comment, function(data) {
                    $(add_comment_form).slideUp(function() {
                        comment.id = data.lastID;
                        comment.timestamp = new Date().getTime();
                        insertComments([comment]);
                    });

                }).error(function() {
                    alert('problem submitting comment');
                });
                
                return false;
            }
            
            function getOrCreateCommentsContainer(commentable_row) {
                var comments_div = $('.comments-wrapper', commentable_row.next());
                if (comments_div.length !== 0) {
                    return comments_div;
                }
                
                var file = $(commentable_row).closest('.file').get(0);
                var file_idx = $('.file').index(file);
                // TODO - put this f'n info right in the attrs for a commentable line
                var row_idx = $('.commentable', file).index($('.commentable', commentable_row));
                
                // TODO - templatize
                commentable_row.after('<tr class="comments-row" file_idx="'
                                      + file_idx
                                      + '" row_idx="'
                                      + row_idx 
                                      + '"><td class="stripe" colspan=2></td><td class="comments"><div class="comments-wrapper"></div></td></tr>');
                return $('.comments-wrapper', commentable_row.next());
            }
            
            function addCommentFormRow() {
                var comment_form = $('#templates .add-comment-form').clone();
                var target_row = $(this).closest('tr');
                var comments_container = getOrCreateCommentsContainer(target_row);
                
                // insert in the proper place in the comments container
                if ($(comments_container).children().length === 0) {
                    $(comments_container).html(comment_form);
                }
                else {
                    $(comments_container).children().last().after(comment_form);
                }
                
                comment_form.hide().slideDown(_slide_speed, function() {
                    $('textarea', comment_form).focus();
                });
                
                $('form', comment_form).submit(function() {
                    // disable default submit behavior w/ page refresh
                    return false;
                });
                
                // hook up comment form buttons
                $('.cancel-button', comment_form).click(function() {
                    $(comment_form).slideUp(_slide_speed, function() {
                        $(comment_form).remove();
                        // remove whole row if there were no other children in the comments form
                        if ($(comments_container).children().length === 0) {
                           $(comments_container).closest('tr').remove();
                        }
                    });
                    return false;
                    // don't reload page
                });

                $('.submit-button', comment_form).click( onCommentSubmitClicked );

                // clear any text selection after the double-click
                if (window.getSelection) {
                    window.getSelection().removeAllRanges();
                }
                else if (document.selection) {
                    document.selection.empty();
                }
            }
            
            function insertComments(comments) {
                var showdown = new Showdown.converter();

                // FIXME - handle order of multiple-comment idxs correctly (sort by id descending?)
                $.each(comments, function(idx, comment) {
                    var file = $('#file_index_' + comment.file_idx);
                    var commentable_row = $('.commentable', file).eq(comment.row_idx).parent();
                    
                    if (file.length === 0 || commentable_row.length === 0) {
                        console.log( 'bad comment: ' + JSON.stringify(comment) );
                        return;
                    }
                    
                    var comments_container = getOrCreateCommentsContainer(commentable_row);
                    // TODO - templatize
                    var comment_div = $('#templates .comment').clone();
                    $(comment_div).attr('id', 'comment_id_' + comment.id);
                    $('.comment-content', comment_div).html(showdown.makeHtml(comment.comment_text));
                    $('.timestamp', comment_div).attr('datetime', comment.timestamp);
                    $('.timestamp', comment_div).timeago()
                    
                    // insert in the proper place in the comments container
                    if ($(comments_container).children().length === 0) {
                        $(comments_container).html(comment_div);
                    }
                    else {
                        $(comments_container).children().last().after(comment_div);
                    }
                    
                    comment_div.hide().slideDown(_slide_speed);

                });
            }
            
            function getCommitJSON() {
                $.getJSON("/#{repo}/#{sha}?format=json", function(data) {
                  $('.loading').hide();
                  
                  if (!data.git_show) {
                      // TODO show proper error
                      $('.loading').html( 'error loading commit - empty git show' );
                      return;
                  }
                  
                  // populate info-block
                  $('.info-block').fadeIn(650);
          
                  $('#sha').append( data.git_show.sha );
                  $('#author-name-and-email').append( data.git_show['author-name-and-email'] );
          
                  var showdown = new Showdown.converter();
                  $('#subject-and-body').append( showdown.makeHtml(data.git_show['subject-and-body']) );
          
                  $('#author-date').append( new Date( data.git_show['author-date'] * 1000 ).toLocaleString() );
          
                  // markup diff tables
                  var highlighter = new DiffHighlighter.highlighter();
                  highlighter.highlightDiff(data.git_show.diff, $('#diff-content').get(0));
          
                  // bind double-clicking a row - add a form comment
                  $('.diff .commentable').dblclick(addCommentFormRow);
                  
                  // add existing comments to the diff rows
                  insertComments(data.comments);
          
                }).error(function(qXHR, textStatus, errorThrown) {
                    $('.loading').html( 'error loading commit: ' + errorThrown );
                });
          }

    %body{ onload: "getCommitJSON()" }
        .loading &= "loading..."
        .wrap
            .info-block{style: 'display: none'}
                    #sha                   &= 'commit:      '
                    #author-name-and-email &= 'author:      '
                    #author-date           &= 'author date: '
                    %span &= 'message:'
                    #subject-and-body
                    
            .diff-block
                #diff-content
        #templates{style: 'display: none'}
            .comment
                .header
                    .timestamp
                    %button.delete-button &= 'delete'
                    %button.edit-button &= 'edit'
                    %div{style: 'clear: both;'}
                .comment-content

            .add-comment-form
                %form{action: "", method: "post"}
                    %textarea{name: "comment_text"}
                    .button-container
                        %button.cancel-button &= 'Discard'
                        %button.submit-button &= 'Submit'
                        %div{style: 'clear: both;'}
                            
                